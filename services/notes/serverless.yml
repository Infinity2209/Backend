service: notes-api
frameworkVersion: "3"

useDotenv: true

plugins:
  - serverless-esbuild
  - serverless-dotenv-plugin

package:
  excludeDevDependencies: false
  individually: true

provider:
  name: aws
  runtime: nodejs16.x
  lambdaHashingVersion: "20201221"
  region: us-east-1
  stage: dev
  environment:
    tableName: ${env:tableName}

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:*"
            - "ses:*"
          Resource: "*"
        - Effect: Allow
          Action:
            - "dynamodb:*"
          Resource: "*"

custom:
  esbuild:
    packager: 'yarn'
  splitStacks:
    perFunction: false
    perType: false
    perGroupFunction: true
    nestedStackCount: 10

functions:
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          cors:
            origin: "*"
          authorizer: aws_iam

  get:
    handler: get.main
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam

  list:
    handler: list.main
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam

  update:
    handler: update.main
    events:
      - http:
          path: notes/{id}
          method: put
          cors: true
          authorizer: aws_iam

  delete:
    handler: delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam

resources:
  # If you have additional resources like API Gateway configurations, you can include them here
  - ${file(resources/api-gateway-errors.yml)}